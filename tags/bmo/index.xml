<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bmo on In a Code Reverie</title>
    <link>http://blog.sebastinsanty.com/tags/bmo/index.xml</link>
    <description>Recent content in Bmo on In a Code Reverie</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2017 | &lt;a href=&#34;http://sebastinsanty.com&#34; target=&#34;_blank&#34;&gt;Sebastin Santy&lt;/a&gt; | &lt;a href=&#34;https://github.com/mgjohansen/hucore.git&#34; target=&#34;_blank&#34;&gt;Hucore theme&lt;/a&gt; &amp; &lt;a href=&#34;http://gohugo.io&#34; target=&#34;_blank&#34;&gt;Hugo&lt;/a&gt; ♥</copyright>
    <atom:link href="http://blog.sebastinsanty.com/tags/bmo/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>GSoC Week 5: Caching in with selectize</title>
      <link>http://blog.sebastinsanty.com/post/gsoc-week-5/</link>
      <pubDate>Sun, 09 Jul 2017 10:01:39 +0530</pubDate>
      
      <guid>http://blog.sebastinsanty.com/post/gsoc-week-5/</guid>
      <description>

&lt;p&gt;Hi everyone!&lt;/p&gt;

&lt;p&gt;This post comes very late than scheduled. My phase evaluations got over last week and questions were only based on mentor evaluations. We did face some hurdles even after the model prototype was designed, which delayed the PR to over one week.&lt;/p&gt;

&lt;h2 id=&#34;work&#34;&gt;Work&lt;/h2&gt;

&lt;p&gt;The primary problem was that the BFCache wasn’t functioning as expected. All forms in BMO have this feature inherently and hence there was no way, the PR was to be merged. BFCache stands for back-forward cache. The heavy jquery manipulations I performed on the &lt;select&gt; elements to AJAX-load data, was what was causing the problem with BFCache.&lt;/p&gt;

&lt;p&gt;To overcome this, we chose to go with &lt;a href=&#34;https://selectize.github.io/selectize.js/&#34;&gt;selectize.js&lt;/a&gt; which helps in loading data with customizations along with the implementation of BFCache. Over discussions, we also thought of replacing the existing prodcompsearch module with the tagging feature of selectize. In short, there are a lot of features in selectize which can be exploited in future. One minor challenge was to match selectize’ design with the BMO guidelines, by hacking some CSS.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The patch has been merged, and I am now looking forward to implement the other modules into new-bug. Due to less people in my team (with atoll going out), I also help in reviewing patches occasionally. I received my first stipend of 720$ after the evaluations and now excited to complete the remaining project in time.&lt;/p&gt;

&lt;p&gt;Signing off. Until next time :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GSoC Week 4: Here comes the protoype</title>
      <link>http://blog.sebastinsanty.com/post/gsoc-week-4/</link>
      <pubDate>Sun, 25 Jun 2017 23:27:08 +0530</pubDate>
      
      <guid>http://blog.sebastinsanty.com/post/gsoc-week-4/</guid>
      <description>

&lt;p&gt;Hi everyone! Next week is the Phase I evaluations for my GSoC project. I have been able to finish the prototype as planned in my proposal.&lt;/p&gt;

&lt;h2 id=&#34;work&#34;&gt;Work&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://bugzilla.mozilla.org/show_bug.cgi?id=1365345&#34;&gt;Bug 1365345&lt;/a&gt;: The work involved winding up the previous month’s work of unusable bits into a working prototype. There were two issues faced during this:&lt;/p&gt;

&lt;p&gt;1) &lt;strong&gt;Tracking Module&lt;/strong&gt;: &lt;code&gt;Bugzilla::Bug&lt;/code&gt; object required a mandatory version field, which was lacking on the interface. Before the work on prototype started, we only had the &lt;code&gt;Status&lt;/code&gt; and &lt;code&gt;Null&lt;/code&gt; Modules. But because of the inclusion of version, &lt;code&gt;Tracking&lt;/code&gt; module also needed to be introduced. This also meant, the previous AJAX call designed for the components had to be extended to retrieve the versions too.&lt;/p&gt;

&lt;p&gt;2) &lt;strong&gt;Extending API&lt;/strong&gt;: As discussed above, the components API was extended to facilitate the retrieval of &lt;code&gt;versions&lt;/code&gt;. Also, as a result of this, the &lt;code&gt;components&lt;/code&gt; API was renamed to &lt;code&gt;product_info&lt;/code&gt;, to indicate its use properly.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;As the Phase I of GSoC is getting over, the major hurdles of setting up the inferface is done with and a flow has been created. Now it would be easy to extend the functionality of the new-bug interface. Here’s a look of how the new-bug interface looks like, till now:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.sebastinsanty.com/static/phase1prototype.png&#34; alt=&#34;Prototype Image&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GSoC Week 3: REST the bugs</title>
      <link>http://blog.sebastinsanty.com/post/gsoc-week-3/</link>
      <pubDate>Wed, 21 Jun 2017 17:53:07 +0530</pubDate>
      
      <guid>http://blog.sebastinsanty.com/post/gsoc-week-3/</guid>
      <description>

&lt;p&gt;Hi, so this week was a time in which a good portion of work amounted to my actual coding and creativity. Till last week, it was about getting elements from bug_modal design and placing them accordingly.&lt;/p&gt;

&lt;h2 id=&#34;work&#34;&gt;Work&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://bugzilla.mozilla.org/show_bug.cgi?id=1365344&#34;&gt;Bug 1365344&lt;/a&gt;: The work here was to include the Status and Null Modules in the new_bug interface. The null module includes Summary and the Status module includes Product, Component and its description. One of the features which is pending and needed to be added at the end is the BMO’s prodcompsearch feature. Also this feature saw the removal of specific codes (bugzilla_ajax) from &lt;code&gt;common_bug_modal.js&lt;/code&gt; file to a new one, made particularly for new_bug.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://bugzilla.mozilla.org/show_bug.cgi?id=1373000&#34;&gt;Bug 1373000&lt;/a&gt;: This came as a blocker to the above bug. It was about making of the REST APIs to accomplish the tasks of retrieving products and components async. Earlier this was implemented in the bug_modal API, the downside of which was, to have a bug number passed for the same. This means it was bug specific and a general API had to be designed.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion:&lt;/h2&gt;

&lt;p&gt;From last two weeks, I got sure that not everything comes from the textbook. During making of my gsoc proposal, I and my mentor considered various aspects of the new_bug.cgi except the transfer of bug_modal design. It turns out that, bug_modal is the biggest headache to the project as it has been tightly knit to the existing &lt;code&gt;show_bug.cgi&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GSoC Week 2: Some bugs here and some vagrant there</title>
      <link>http://blog.sebastinsanty.com/post/gsoc-week-2/</link>
      <pubDate>Mon, 12 Jun 2017 18:50:19 +0530</pubDate>
      
      <guid>http://blog.sebastinsanty.com/post/gsoc-week-2/</guid>
      <description>

&lt;p&gt;As the second week of GSoC comes to an end, I have been able to cover three major bugs till now.&lt;/p&gt;

&lt;h2 id=&#34;work&#34;&gt;Work&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://bugzilla.mozilla.org/show_bug.cgi?id=1365340&#34;&gt;Bug 1365340&lt;/a&gt;: A new bug interface has been created. This loads up on &lt;code&gt;/new-bug&lt;/code&gt; which is served by the new_bug.cgi script. This went pretty much easy, as this only needed loading of a page. The result is live in action: &lt;a href=&#34;https://bugzilla.mozilla.org/new-bug&#34;&gt;https://bugzilla.mozilla.org/new-bug&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://bugzilla.mozilla.org/show_bug.cgi?id=1365342&#34;&gt;Bug 1365342&lt;/a&gt;: The first major task was to move &lt;code&gt;new_comment&lt;/code&gt; functionality to &lt;code&gt;new-bug&lt;/code&gt;. This was one of the challenging tasks, as several components used in the new bug modal design were tightly coupled with the &lt;code&gt;show_bug.cgi&lt;/code&gt; for which the design was originally deployed. A workaround which we came up was to make copies of the same components with a &lt;code&gt;common-*&lt;/code&gt; prefix and then reduce and shift around functionalities, so that it becomes generalized by the end of GSoC period. This means that the end result of GSoC will also consist of generalization of Bug Modal Design to be used by other templates in addition to the new-bug interface&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/mozilla-bteam/bmo/pull/92&#34;&gt;PR 92&lt;/a&gt;: Another issue that propped in between was the ease of rapid debugging. Rapid debugging is especially required, when the work involves a lot of client-side work, as was my case in some of the initial tasks. The already available provisioner script was tedious, as this was only required to setup BMO locally. A new update provisioner script was designed to limit the time of execution from upwards of quarter of a minute to 6 seconds.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I enjoyed working on some of the initializing bugs this week. And Oh, over a casual chat with my mentor, I came to know about something great: Bugzilla was (and is) used by NASA for its missions. Don&amp;rsquo;t believe me, Check this out:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.sebastinsanty.com/static/bugzilla_nasa.png&#34; alt=&#34;Example image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Signing off. Until next time :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GSoC 2017 with Mozilla</title>
      <link>http://blog.sebastinsanty.com/post/gsoc-introduction/</link>
      <pubDate>Tue, 30 May 2017 11:49:35 +0530</pubDate>
      
      <guid>http://blog.sebastinsanty.com/post/gsoc-introduction/</guid>
      <description>

&lt;p&gt;Hello everyone!&lt;/p&gt;

&lt;p&gt;So as I mentioned in my previous post, here is what I&amp;rsquo;ll be working on, this Summer. Having worked with Mozilla for around 10 months on multiple projects, now for Google Summer of Code (GSoC), I will be working on the project &lt;strong&gt;&amp;ldquo;Improving bug filing interface for &lt;a href=&#34;https://bugzilla.mozilla.org&#34;&gt;bugzilla.mozilla.org&lt;/a&gt;&amp;ldquo;&lt;/strong&gt; with the &lt;a href=&#34;https://wiki.mozilla.org/BMO#B-Team&#34;&gt;Mozilla B-Team&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;inception&#34;&gt;Inception&lt;/h3&gt;

&lt;p&gt;I started off with Firefox, submitted around 10 patches and was an active contributor during June and July. That is when I stumbled on the Bugzilla Project, not surprisingly through a bug. That is the start of my long association with the Mozilla B-Team. &lt;a href=&#34;https://www.linkedin.com/in/dylanwh/&#34;&gt;Dylan Hardison [:dylan]&lt;/a&gt; has been constantly helping and mentoring me, all through these months. The fact that there are less people in the B-Team helped me in constant involvement with the team.&lt;/p&gt;

&lt;p&gt;In late January, I simultaneously started contributing to &lt;a href=&#34;https://treeherder.mozilla.org&#34;&gt;Treeherder&lt;/a&gt;, owing to my knowledge in Django and Angular. &lt;a href=&#34;https://www.linkedin.com/in/wrlach&#34;&gt;William Lachance [:wlach]&lt;/a&gt; was kind enough to give me an interesting project &amp;ldquo;Replacing REST APIs with GraphQL&amp;rdquo; which I am still working on, alongwith &lt;a href=&#34;https://www.linkedin.com/in/cameron-dawson-a9a41a/&#34;&gt;Cameron Dawson [:camd]&lt;/a&gt; as William moved on to the telemetry project (I have a lot more to say about this, but in a later post).&lt;/p&gt;

&lt;p&gt;Finally, after discussing with my mentors, I decided to pick the project to improve bug filing interface for bugzilla.mozilla.org.&lt;/p&gt;

&lt;h3 id=&#34;my-project&#34;&gt;My Project&lt;/h3&gt;

&lt;p&gt;My work is with the Mozilla&amp;rsquo;s version of Bugzilla Project, called bugzilla.mozilla.org (BMO). At present BMO uses enter_bug.cgi to file bugs. People filing bugs on BMO frequently, are aware of how tedious the process of filing bugs is. Some of the existing problems I intend to solve are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Presence of multiple views for different types of users: simple, advanced, and the &amp;ldquo;guided&amp;rdquo; wizard-like system, is an issue. The new interface will have a single-page interface.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Presence of a lot of legacy code, taken from the upstream (Bugzilla Project), which makes it difficult for even developers to make any substantial changes, or create custom form wrappers over them. This calls for a green-field approach. So instead of working on enter_bug.cgi, I&amp;rsquo;ll be creating a new cgi script (new_bug.cgi), which will work in parallel to the former, until it is cleared of all the bugs.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The most biggest problem is that bug filing consumes a lot of time. There are two parts to this issue:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;enter_bug.cgi is completely dependent on Template Toolkit rendering of html pages. The parts of the templates that are slow involve loops over huge lists of things. Core developers of Firefox routinely leave open tabs because loading bug filing page for the Core product takes upwards of 8 seconds. The new interface will have less dependence on backend rendering, and will rely more on AJAX loading of data.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Also submitting the bugs takes a good amount of time. This is because, enter_bug.cgi is a stateless CGI that posts form data to post_bug.cgi which subsequently makes a database entry. This is easily confused with process_bug.cgi, which is the backend for show_bug.cgi. Having a unified place in the web UI for bug creation would be a cleaner design.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Other than solving the above problems, I will also take into consideration new features like Bug Modal design (which was used for the current show_bug.cgi) while building this project. The meta-tracking bug for the project is &lt;a href=&#34;https://bugzilla.mozilla.org/show_bug.cgi?id=1365317&#34;&gt;Bug 1365317&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for going through my long post. I hope to complete the GSoC Project with &lt;em&gt;Zarro Boogs&lt;/em&gt; (you should know the Bugzilla slang to understand this! :) ). Signing off. Until next time :-).&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>